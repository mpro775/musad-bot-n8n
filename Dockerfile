# syntax=docker/dockerfile:1.7

########### ๐งฑ ูุฑุญูุฉ ุงูุจูุงุก (Build Stage) ###########
FROM node:22-alpine AS build
WORKDIR /app

# ุชุซุจูุช ุงูุชุจุนูุงุช ุงูุฃุณุงุณูุฉ ุงููุงุฒูุฉ ููุจูุงุก
RUN apk add --no-cache \
    libc6-compat \
    python3 \
    make \
    g++ \
    curl

# ุชุญุณูู ุงููุงุด: ูุณุฎ ูููุงุช ุงูุญุฒู ุฃููุงู ูุชุณุฑูุน ุงูุจูุงุก ุงููุงุญู
COPY package*.json ./
RUN --mount=type=cache,target=/root/.npm \
    npm ci --omit=dev=false && npm cache clean --force

# ูุณุฎ ูููุงุช ุงูุชูููู
COPY tsconfig*.json nest-cli.json ./

# ูุณุฎ ุงูููุฏ ุงููุตุฏุฑู
COPY . .

# ุชุญุฏูุฏ ูุถุน ุงูุจูุฆุฉ ุฃุซูุงุก ุงูุจูุงุก
ARG NODE_ENV=production
ENV NODE_ENV=$NODE_ENV

# ุจูุงุก ุงูุชุทุจูู ุซู ุญุฐู ุงูุชุจุนูุงุช ุงูุฎุงุตุฉ ุจุงูุชุทููุฑ
RUN npm run build && npm prune --omit=dev

########### ๐ ูุฑุญูุฉ ุงูุชุดุบูู (Runtime Stage) ###########
FROM node:22-alpine AS runtime
WORKDIR /app

# ุฅุนุฏุงุฏ ูุชุบูุฑุงุช ุงูุจูุฆุฉ
ENV NODE_ENV=production \
    PORT=3000 \
    TZ=Asia/Riyadh

# ุชุซุจูุช ุฃุฏูุงุช ุฎูููุฉ ูุชุญุณูู ุฅุฏุงุฑุฉ ุงูุฅุดุงุฑุงุช ูุงูุดูุงุฏุงุช
RUN apk add --no-cache \
    dumb-init \
    curl \
    wget \
    ca-certificates \
    && update-ca-certificates

# ุฅูุดุงุก ูุณุชุฎุฏู ุบูุฑ ุฌุฐุฑู ูุฃูุงู ุฃุนูู
RUN addgroup -S app && adduser -S app -G app

# ูุณุฎ ุงููููุงุช ูู ูุฑุญูุฉ ุงูุจูุงุก
COPY --from=build --chown=app:app /app/dist ./dist
COPY --from=build --chown=app:app /app/node_modules ./node_modules
COPY --from=build --chown=app:app /app/package*.json ./

# ูุญุต ุงูุตุญุฉ (Healthcheck)
HEALTHCHECK --interval=30s --timeout=5s --start-period=20s --retries=3 \
  CMD curl -fsS http://127.0.0.1:${PORT}/api/health || exit 1

# ูุชุญ ุงููููุฐ
EXPOSE 3000

# ุงูุชุดุบูู ููุณุชุฎุฏู ุบูุฑ ุฌุฐุฑู
USER app

# ููุทุฉ ุงูุฏุฎูู
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/main.js"]
