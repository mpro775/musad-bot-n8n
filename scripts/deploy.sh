#!/bin/bash

# ุณูุฑูุจุช ูุดุฑ Kaleem API
set -euo pipefail

# ูุชุบูุฑุงุช
IMAGE_TAG=${IMAGE_TAG:-"ghcr.io/kaleem/kaleem-api:latest"}
COMPOSE_FILE="docker-compose.prod.yml"
BACKUP_DIR="/opt/kaleem/backups"
LOG_FILE="/opt/kaleem/logs/deploy.log"

# ุฏูุงู ูุณุงุนุฏุฉ
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

error_exit() {
    log "ERROR: $1"
    exit 1
}

# ุฅูุดุงุก ุงููุฌูุฏุงุช ุงููุทููุจุฉ
mkdir -p "$BACKUP_DIR" "$(dirname "$LOG_FILE")"

log "๐ ุจุฏุก ุนูููุฉ ุงููุดุฑ..."
log "ุตูุฑุฉ Docker: $IMAGE_TAG"

# ูุญุต ูุชุทูุจุงุช ุงููุดุฑ
if [ ! -f "$COMPOSE_FILE" ]; then
    error_exit "ููู $COMPOSE_FILE ุบูุฑ ููุฌูุฏ"
fi

if ! docker --version > /dev/null 2>&1; then
    error_exit "Docker ุบูุฑ ูุซุจุช ุฃู ุบูุฑ ูุชุงุญ"
fi

if ! docker compose version > /dev/null 2>&1; then
    error_exit "Docker Compose ุบูุฑ ูุชุงุญ"
fi

# ูุณุฎ ุงุญุชูุงุทูุฉ
log "๐ฆ ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ..."
BACKUP_NAME="kaleem-backup-$(date +%Y%m%d-%H%M%S).tar.gz"

# ูุณุฎ ุงุญุชูุงุทูุฉ ููุจูุงูุงุช ุงููููุฉ
docker compose -f "$COMPOSE_FILE" exec -T mongo mongodump --archive | gzip > "$BACKUP_DIR/mongo-$BACKUP_NAME" || log "ุชุญุฐูุฑ: ูุดู ูู ุงููุณุฎ ุงูุงุญุชูุงุทู ูู MongoDB"

# ุณุญุจ ุงูุตูุฑุฉ ุงูุฌุฏูุฏุฉ
log "โฌ๏ธ ุณุญุจ ุงูุตูุฑุฉ ุงูุฌุฏูุฏุฉ..."
docker pull "$IMAGE_TAG" || error_exit "ูุดู ูู ุณุญุจ ุงูุตูุฑุฉ"

# ุชุญุฏูุซ ูุชุบูุฑ ุงูุจูุฆุฉ
export KALEEM_API_IMAGE="$IMAGE_TAG"

# ุฅููุงู ุงูุฎุฏูุงุช ุงููุฏููุฉ ุชุฏุฑูุฌูุงู
log "๐ ุชุญุฏูุซ ุงูุฎุฏูุงุช..."

# ุชุญุฏูุซ API service ููุท
docker compose -f "$COMPOSE_FILE" up -d --no-deps api

# ุงูุชุธุงุฑ ุจุฏุก ุงูุฎุฏูุฉ
log "โณ ุงูุชุธุงุฑ ุจุฏุก ุงูุฎุฏูุฉ ุงูุฌุฏูุฏุฉ..."
sleep 10

# ูุญุต ุงูุตุญุฉ
log "๐ฅ ูุญุต ุตุญุฉ ุงูุชุทุจูู..."
HEALTH_URL="http://localhost:3000/api/health"
MAX_ATTEMPTS=30
ATTEMPT=1

while [ $ATTEMPT -le $MAX_ATTEMPTS ]; do
    if curl -f -s "$HEALTH_URL" > /dev/null 2>&1; then
        log "โ ูุญุต ุงูุตุญุฉ ูุฌุญ!"
        break
    fi
    
    if [ $ATTEMPT -eq $MAX_ATTEMPTS ]; then
        log "โ ูุดู ูุญุต ุงูุตุญุฉ ุจุนุฏ $MAX_ATTEMPTS ูุญุงููุฉ"
        
        # ุงุณุชุฑุฌุงุน ุงููุณุฎุฉ ุงูุณุงุจูุฉ
        log "๐ ุงุณุชุฑุฌุงุน ุงููุณุฎุฉ ุงูุณุงุจูุฉ..."
        docker compose -f "$COMPOSE_FILE" rollback api || true
        
        error_exit "ูุดู ุงููุดุฑ - ุชู ุงุณุชุฑุฌุงุน ุงููุณุฎุฉ ุงูุณุงุจูุฉ"
    fi
    
    log "ูุญุงููุฉ ูุญุต ุงูุตุญุฉ $ATTEMPT/$MAX_ATTEMPTS..."
    sleep 5
    ((ATTEMPT++))
done

# ุชูุธูู ุงูุตูุฑ ุงููุฏููุฉ
log "๐งน ุชูุธูู ุงูุตูุฑ ุงููุฏููุฉ..."
docker image prune -f || log "ุชุญุฐูุฑ: ูุดู ูู ุชูุธูู ุงูุตูุฑ"

# ุชุญุฏูุซ workers ุฅุฐุง ูุฒู ุงูุฃูุฑ
log "๐ ุชุญุฏูุซ ุงูุนูุงู..."
docker compose -f "$COMPOSE_FILE" up -d --no-deps ai-reply-worker webhook-dispatcher || log "ุชุญุฐูุฑ: ูุดู ูู ุชุญุฏูุซ ุงูุนูุงู"

log "๐ ุชู ุงููุดุฑ ุจูุฌุงุญ!"
log "ุงูุตูุฑุฉ: $IMAGE_TAG"
log "ุงูููุช: $(date)"

# ุฅุดุนุงุฑ ุงููุฌุงุญ (ุงุฎุชูุงุฑู)
if [ -n "${WEBHOOK_URL:-}" ]; then
    curl -X POST "$WEBHOOK_URL" \
        -H "Content-Type: application/json" \
        -d "{\"text\":\"โ ูุฌุญ ูุดุฑ Kaleem API\\nุงูุตูุฑุฉ: $IMAGE_TAG\\nุงูููุช: $(date)\"}" || true
fi
