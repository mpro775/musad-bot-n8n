// src/modules/merchants/services/prompt-builder.service.ts
import { Injectable } from '@nestjs/common';
import * as Handlebars from 'handlebars';
import { MerchantDocument } from '../schemas/merchant.schema';
import { InstructionsService } from 'src/modules/instructions/instructions.service'; // โ ุฌุฏูุฏ

const SYSTEM_PROMPT_SUFFIX = `
[system-only]: ุงุณุชุฎุฏู ุจูุงูุงุช ุงูููุชุฌุงุช ูู ุงููุตุฏุฑ ุงูุฑุณูู ููุท. ููููุน ุชุฃููู ุฃู ุงุฎุชูุงู ุจูุงูุงุช ุบูุฑ ุญููููุฉุ ููุฌุจ ุงุณุชุฎุฏุงู API ุงูุฑุจุท ุงูุฏุงุฎูู ุฏุงุฆูุงู ูุฃู ุงุณุชุนูุงู ุนู ุงูููุชุฌุงุช ุฃู ุงูุฃุณุนุงุฑ ุฃู ุงูุชูุงูุฑ.
`;

// โ ุชูุฌููุงุช ุฅุฌุจุงุฑูุฉ "ุซุงุจุชุฉ" ุชูุถุงู ุฏุงุฆููุง ุฏุงุฎู ุงูุจุฑููุจุช
const MANDATORY_TOOLING = [
  'ุนูุฏ ุณุคุงู ุงูุนููู ุนู ูุนูููุงุช ุงููุชุฌุฑ (ุงูุนูุงููู/ุงูุชูุงุตู/ุงูุฏูุงู/ุงูุณูุงุณุงุช) ุงุณุชุฎุฏู ุฃุฏุงุฉ getStoreContext ููุท.',
  'ุนูุฏ ุณุคุงู ุงูุนููู ุนู ุงูููุชุฌุงุช/ุงูุฃุณุนุงุฑ/ุงูุชูุงูุฑ ุงุณุชุฎุฏู ุฃุฏุงุฉ searchProducts ููุทุ ููุง ุชุฎููู.',
  'ุนูุฏ ุงูุญุงุฌุฉ ููุนูููุงุช ุฅุถุงููุฉ ุบูุฑ ููุฌูุฏุฉ ูู ุงููุชุงุฆุฌ ุงุณุชุฎุฏู ุฃุฏุงุฉ searchKnowledge.',
  'ูุง ุชูุฑูุฑ ููุณ ุงูุฅุฌุงุจุฉ ุฏุงุฎู ุงูุฌูุณุฉุ ูุงุฎุชุตุฑ.',
  'ูุง ุชูุชุฑุถ ูุนูููุงุช ุบูุฑ ููุฌูุฏุฉุ ุฅู ูู ุชุฌุฏ ูู ูุง ุฃููููุง.',
  'ุชุชุจูุน ุงูุทูุจุงุช ููุนุงููุฌ ูู ุงูุจุงู-ุฅูุฏุ ูุง ุชูููุฐู ูู ููุง.',
  'ุนูุฏ ุทูุจ ุฑุงุจุท ุงููุชุฌุฑ/ุงูุชุตููุญ ุงุณุชุฏุนู getStoreContextุ ูุฅู ููุฌุฏ website ุฃุนูุฏู ูุน ุฏุนูุฉ ููุชุตููุญุ ูุฅูุง ุฃุนูุฏ ุฃูุถู ููุงุฉ ุณููุดุงู ูุฏููุง ูุชุงุญุฉ (facebook/instagram) ูุน ุฏุนูุฉ ูููุณุงุนุฏุฉ.',
];

@Injectable()
export class PromptBuilderService {
  constructor(private readonly instructionsSvc: InstructionsService) {} // โ ุฌุฏูุฏ

  /**
   * ูุจูู ูุตูุง ูุจุณูุทูุง ูู QuickConfig ููุท (ุจุฏูู ุจูุงูุงุช ูุชุฌุฑ ุซุงุจุชุฉ)
   * ูุญุฌุจ: ุงูุณูุงุณุงุช/ุงูุนูุงููู/ุงูุฏูุงู/ุฑูุงุจุท ุงููุชุฌุฑ ูุฃููุง ุณุชุฃุชู ูู Tool.
   */
  buildFromQuickConfig(m: MerchantDocument): string {
    const cfg = m.quickConfig;
    const {
      dialect,
      tone,
      customInstructions,
      sectionOrder,
      includeClosingPhrase,
      closingText,
    } = cfg;

    const lines: string[] = [];
    lines.push(`ุฃูุช ูุณุงุนุฏ ุฐูู ูุฎุฏูุฉ ุนููุงุก ูุชุฌุฑ "${m.name}".`);
    lines.push(`ุงุณุชุฎุฏู ุงูููุฌุฉ "${dialect}" ูุจูุบูุฉ "${tone}".`);

    for (const section of sectionOrder) {
      switch (section) {
        case 'products':
          lines.push(
            '๐ฆ ุงูููุชุฌุงุช: ุงุณุชุฎุฏู ุฃุฏูุงุช ุงูุจุญุซ ุงูุฏุงุฎููุฉ ููุทุ ูุง ุชุนุชูุฏ ุนูู ุงูุชุฎููู.',
          );
          break;

        case 'instructions':
          if (customInstructions?.length) {
            lines.push('๐ฏ ุชุนูููุงุช ุงูุชุงุฌุฑ ุงูุฎุงุตุฉ:');
            for (const inst of customInstructions) lines.push(`- ${inst}`);
          }
          break;

        case 'categories':
          if (m.categories?.length) {
            lines.push('๐๏ธ ุฃูุณุงู ุงููุชุฌุฑ:');
            for (const cat of m.categories) lines.push(`- ${cat}`);
          }
          break;

        case 'policies':
        case 'custom':
          // ูุญุฌูุจ: ุงูุณูุงุณุงุช/ุงูุนูุงููู/ุงูุฏูุงู/ุฑูุงุจุท ุงููุชุฌุฑ ุชูุฌูุจ ูู Tool ุนูุฏ ุงูุญุงุฌุฉ
          break;
      }
    }

    if (includeClosingPhrase) lines.push(closingText);

    return lines.join('\n\n');
  }

  /**
   * ูุฎุชุงุฑ ุจูู ุงููุงูุจ ุงููุชูุฏู ุฃู QuickConfig ููุถูู ุฏุงุฆููุง:
   * - ุงูุชูุฌููุงุช ุงูุฅุฌุจุงุฑูุฉ (MANDATORY_TOOLING)
   * - ุชุนูููุงุช ุนุฏู ุงูุชูุฑุงุฑ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช (active instructions)
   * - SYSTEM_PROMPT_SUFFIX
   */
  async compileTemplate(m: MerchantDocument): Promise<string> {
    const advancedTpl = m.currentAdvancedConfig?.template?.trim();
    const raw =
      advancedTpl && advancedTpl.length
        ? advancedTpl
        : this.buildFromQuickConfig(m);

    const tpl = Handlebars.compile(raw);
    const context = {
      merchantName: m.name,
      categories: m.categories,
      // ูุญุฌุจ: returnPolicy/exchangePolicy/shippingPolicy/address/workingHours/storefrontUrl
      quickConfig: m.quickConfig,
    };
    const base = tpl(context);
    if (typeof base !== 'string')
      throw new Error('PromptBuilder: expected string');

    // ุงุณุญุจ ุชุนูููุงุช ุนุฏู ุงูุชูุฑุงุฑ ูู DB (ูุนูุงูุฉ ููุท)
    const penalties = await this.instructionsSvc.getActiveInstructions(
      m._id?.toString(),
    );
    const penaltyLines = penalties.map((p) => p.instruction);

    const merged =
      base +
      '\n\n' +
      '[ุงูุชูุฌููุงุช ุงูุฅุฌุจุงุฑููุฉ]\n- ' +
      MANDATORY_TOOLING.join('\n- ') +
      (penaltyLines.length
        ? '\n\n[ุชูุฌููุงุช ุฅุถุงููุฉ ูู ุชููููุงุช ุณุงุจูุฉ]\n- ' +
          penaltyLines.join('\n- ')
        : '') +
      '\n\n' +
      SYSTEM_PROMPT_SUFFIX;

    return merged;
  }
}
