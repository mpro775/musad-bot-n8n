name: Deploy to Production

on:
  workflow_run:
    workflows: ['CI']
    types: [completed]
    branches: [main]

concurrency:
  group: deploy-production
  cancel-in-progress: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/kaleem-api

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    environment:
      name: production
      url: https://api.kaleem-ai.com
    permissions:
      contents: read

    steps:
      - name: Checkout deployment files
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            docker-compose.yml
            docker-compose.prod.yml
            scripts/

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: Add known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Define image tag (use digest for immutability)
        id: image
        run: |
          echo "tag=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Copy files
        run: |
          scp docker-compose.prod.yml ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/opt/kaleem/
          scp scripts/deploy.sh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/opt/kaleem/

      - name: Deploy
        run: |
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
            set -e
            cd /opt/kaleem
            export IMAGE_TAG='${{ steps.image.outputs.tag }}'
            chmod +x deploy.sh
            ./deploy.sh
          "

      - name: Health check
        run: |
          HEALTH_URL=${{ vars.HEALTH_URL || 'https://api.kaleem-ai.com/api/health' }}
          for i in {1..10}; do
            if curl -fsS "$HEALTH_URL"; then
              echo '✅ Healthy'
              exit 0
            fi
            echo "⏳ Waiting ($i/10)..."
            sleep 20
          done
          echo '❌ Health check failed'
          exit 1
