name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    services:
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: Back-end/package-lock.json

      - name: Install dependencies
        working-directory: ./Back-end
        run: npm ci

      - name: Run linter
        working-directory: ./Back-end
        run: npm run lint

      - name: Run unit tests with coverage
        working-directory: ./Back-end
        run: npm run test:unit:cov

      - name: Run integration tests
        working-directory: ./Back-end
        run: npm run test:integration
        env:
          NODE_ENV: test
          REDIS_URL: redis://localhost:6379

      - name: Run E2E tests
        working-directory: ./Back-end
        run: npm run test:e2e
        env:
          NODE_ENV: test
          REDIS_URL: redis://localhost:6379

      - name: Upload coverage reports to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          file: ./Back-end/coverage/lcov.info
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false

      - name: Archive test results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.node-version }}
          path: |
            Back-end/coverage/
            Back-end/test-results/

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: Back-end/package-lock.json

      - name: Install dependencies
        working-directory: ./Back-end
        run: npm ci

      - name: Run security audit
        working-directory: ./Back-end
        run: npm audit --audit-level=moderate

      - name: Run security tests
        working-directory: ./Back-end
        run: npm run test:security:bash
        continue-on-error: true
